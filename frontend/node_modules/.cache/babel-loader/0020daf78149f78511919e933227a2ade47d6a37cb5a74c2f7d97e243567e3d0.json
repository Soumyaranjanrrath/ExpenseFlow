{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\OneDrive\\\\Desktop\\\\ExpenseFlow_01\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\n\n// Base URL for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// Create a global context\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Function to add an income\n  const addIncome = async income => {\n    await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes(); // Refresh incomes after adding\n  };\n\n  // Function to fetch all incomes\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n  };\n\n  // Function to delete an income\n  const deleteIncome = async id => {\n    await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes(); // Refresh incomes after deleting\n  };\n\n  // Function to calculate total income\n  const totalIncome = () => {\n    return incomes.reduce((acc, income) => acc + income.amount, 0);\n  };\n\n  // Function to add an expense\n  const addExpense = async expense => {\n    await axios.post(`${BASE_URL}add-expense`, expense).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses(); // Refresh expenses after adding\n  };\n\n  // Function to fetch all expenses\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n  };\n\n  // Function to delete an expense\n  const deleteExpense = async id => {\n    await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses(); // Refresh expenses after deleting\n  };\n\n  // Function to calculate total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((acc, expense) => acc + expense.amount, 0);\n  };\n\n  // Function to calculate total balance (income - expenses)\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Function to get transaction history (latest 3 transactions)\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use global context\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","post","catch","err","response","data","message","getIncomes","get","deleteIncome","id","delete","totalIncome","reduce","acc","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/soumy/OneDrive/Desktop/ExpenseFlow_01/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\n\r\n// Base URL for API requests\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n// Create a global context\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    // Function to add an income\r\n    const addIncome = async (income) => {\r\n        await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncomes() // Refresh incomes after adding\r\n    }\r\n\r\n    // Function to fetch all incomes\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-incomes`)\r\n        setIncomes(response.data)\r\n    }\r\n\r\n    // Function to delete an income\r\n    const deleteIncome = async (id) => {\r\n        await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes() // Refresh incomes after deleting\r\n    }\r\n\r\n    // Function to calculate total income\r\n    const totalIncome = () => {\r\n        return incomes.reduce((acc, income) => acc + income.amount, 0)\r\n    }\r\n\r\n    // Function to add an expense\r\n    const addExpense = async (expense) => {\r\n        await axios.post(`${BASE_URL}add-expense`, expense)\r\n            .catch((err) => {\r\n                setError(err.response.data.message)\r\n            })\r\n        getExpenses() // Refresh expenses after adding\r\n    }\r\n\r\n    // Function to fetch all expenses\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expenses`)\r\n        setExpenses(response.data)\r\n    }\r\n\r\n    // Function to delete an expense\r\n    const deleteExpense = async (id) => {\r\n        await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n        getExpenses() // Refresh expenses after deleting\r\n    }\r\n\r\n    // Function to calculate total expenses\r\n    const totalExpenses = () => {\r\n        return expenses.reduce((acc, expense) => acc + expense.amount, 0)\r\n    }\r\n\r\n    // Function to calculate total balance (income - expenses)\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    // Function to get transaction history (latest 3 transactions)\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\n// Custom hook to use global context\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}