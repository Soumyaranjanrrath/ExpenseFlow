{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\OneDrive\\\\Desktop\\\\ExpenseFlow_01\\\\frontend\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Base URL for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// Create an auth context\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user from localStorage on initial render\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${BASE_URL}auth/register`, userData);\n\n      // Save user to localStorage\n      localStorage.setItem('user', JSON.stringify(response.data));\n      setUser(response.data);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setLoading(true);\n      const response = await axios.post(`${BASE_URL}auth/login`, {\n        email,\n        password\n      });\n\n      // Save user to localStorage\n      localStorage.setItem('user', JSON.stringify(response.data));\n      setUser(response.data);\n      setError(null);\n      return response.data;\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout user\n  const logout = () => {\n    // Remove user from localStorage\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!user;\n  };\n\n  // Get auth token for API requests\n  const getAuthHeader = () => {\n    if (user !== null && user !== void 0 && user.token) {\n      return {\n        Authorization: `Bearer ${user.token}`\n      };\n    }\n    return {};\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      isAuthenticated,\n      getAuthHeader,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","BASE_URL","AuthContext","AuthProvider","children","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","JSON","parse","register","userData","response","post","setItem","stringify","data","err","message","login","email","password","logout","removeItem","isAuthenticated","getAuthHeader","token","Authorization","useAuth"],"sources":["C:/Users/soumy/OneDrive/Desktop/ExpenseFlow_01/frontend/src/context/authContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Base URL for API requests\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n// Create an auth context\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    // Load user from localStorage on initial render\r\n    useEffect(() => {\r\n        const storedUser = localStorage.getItem('user');\r\n        if (storedUser) {\r\n            setUser(JSON.parse(storedUser));\r\n        }\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    // Register user\r\n    const register = async (userData) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post(`${BASE_URL}auth/register`, userData);\r\n            \r\n            // Save user to localStorage\r\n            localStorage.setItem('user', JSON.stringify(response.data));\r\n            setUser(response.data);\r\n            setError(null);\r\n            \r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Registration failed');\r\n            throw err;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Login user\r\n    const login = async (email, password) => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post(`${BASE_URL}auth/login`, { email, password });\r\n            \r\n            // Save user to localStorage\r\n            localStorage.setItem('user', JSON.stringify(response.data));\r\n            setUser(response.data);\r\n            setError(null);\r\n            \r\n            return response.data;\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Login failed');\r\n            throw err;\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    // Logout user\r\n    const logout = () => {\r\n        // Remove user from localStorage\r\n        localStorage.removeItem('user');\r\n        setUser(null);\r\n    };\r\n\r\n    // Check if user is authenticated\r\n    const isAuthenticated = () => {\r\n        return !!user;\r\n    };\r\n\r\n    // Get auth token for API requests\r\n    const getAuthHeader = () => {\r\n        if (user?.token) {\r\n            return { Authorization: `Bearer ${user.token}` };\r\n        }\r\n        return {};\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            user,\r\n            loading,\r\n            error,\r\n            register,\r\n            login,\r\n            logout,\r\n            isAuthenticated,\r\n            getAuthHeader,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n}; "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}