{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\soumy\\\\OneDrive\\\\Desktop\\\\ExpenseFlow_01\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useAuth } from './authContext';\n\n// Base URL for API requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\n\n// Create a global context\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const {\n    user,\n    getAuthHeader\n  } = useAuth();\n\n  // Clear data when user changes or logs out\n  useEffect(() => {\n    setIncomes([]);\n    setExpenses([]);\n\n    // If user is logged in, fetch their data\n    if (user) {\n      getIncomes();\n      getExpenses();\n    }\n  }, [user]);\n\n  // Function to get auth headers\n  const getHeaders = () => {\n    return {\n      headers: getAuthHeader()\n    };\n  };\n\n  // Function to add an income\n  const addIncome = async income => {\n    try {\n      await axios.post(`${BASE_URL}add-income`, income, getHeaders());\n      getIncomes(); // Refresh incomes after adding\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error adding income');\n    }\n  };\n\n  // Function to fetch all incomes\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`, getHeaders());\n      setIncomes(response.data);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Error fetching incomes');\n      setIncomes([]);\n    }\n  };\n\n  // Function to delete an income\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`, getHeaders());\n      getIncomes(); // Refresh incomes after deleting\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Error deleting income');\n    }\n  };\n\n  // Function to calculate total income\n  const totalIncome = () => {\n    return incomes.reduce((acc, income) => acc + income.amount, 0);\n  };\n\n  // Function to add an expense\n  const addExpense = async expense => {\n    try {\n      await axios.post(`${BASE_URL}add-expense`, expense, getHeaders());\n      getExpenses(); // Refresh expenses after adding\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Error adding expense');\n    }\n  };\n\n  // Function to fetch all expenses\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`, getHeaders());\n      setExpenses(response.data);\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Error fetching expenses');\n      setExpenses([]);\n    }\n  };\n\n  // Function to delete an expense\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`, getHeaders());\n      getExpenses(); // Refresh expenses after deleting\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      setError(((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || 'Error deleting expense');\n    }\n  };\n\n  // Function to calculate total expenses\n  const totalExpenses = () => {\n    return expenses.reduce((acc, expense) => acc + expense.amount, 0);\n  };\n\n  // Function to calculate total balance (income - expenses)\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n\n  // Function to get transaction history (latest 3 transactions)\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n\n// Custom hook to use global context\n_s(GlobalProvider, \"XH0ZbIdUAFOG5Ab/AxlF9jne1LE=\", false, function () {\n  return [useAuth];\n});\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","useEffect","axios","useAuth","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","user","getAuthHeader","getIncomes","getExpenses","getHeaders","headers","addIncome","income","post","err","response","data","message","get","deleteIncome","id","delete","totalIncome","reduce","acc","amount","addExpense","expense","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["C:/Users/soumy/OneDrive/Desktop/ExpenseFlow_01/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\"\r\nimport axios from 'axios'\r\nimport { useAuth } from './authContext'\r\n\r\n// Base URL for API requests\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\n// Create a global context\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [incomes, setIncomes] = useState([])\r\n    const [expenses, setExpenses] = useState([])\r\n    const [error, setError] = useState(null)\r\n    const { user, getAuthHeader } = useAuth()\r\n\r\n    // Clear data when user changes or logs out\r\n    useEffect(() => {\r\n        setIncomes([])\r\n        setExpenses([])\r\n        \r\n        // If user is logged in, fetch their data\r\n        if (user) {\r\n            getIncomes()\r\n            getExpenses()\r\n        }\r\n    }, [user])\r\n\r\n    // Function to get auth headers\r\n    const getHeaders = () => {\r\n        return {\r\n            headers: getAuthHeader()\r\n        }\r\n    }\r\n\r\n    // Function to add an income\r\n    const addIncome = async (income) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-income`, income, getHeaders())\r\n            getIncomes() // Refresh incomes after adding\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error adding income')\r\n        }\r\n    }\r\n\r\n    // Function to fetch all incomes\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`, getHeaders())\r\n            setIncomes(response.data)\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error fetching incomes')\r\n            setIncomes([])\r\n        }\r\n    }\r\n\r\n    // Function to delete an income\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-income/${id}`, getHeaders())\r\n            getIncomes() // Refresh incomes after deleting\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error deleting income')\r\n        }\r\n    }\r\n\r\n    // Function to calculate total income\r\n    const totalIncome = () => {\r\n        return incomes.reduce((acc, income) => acc + income.amount, 0)\r\n    }\r\n\r\n    // Function to add an expense\r\n    const addExpense = async (expense) => {\r\n        try {\r\n            await axios.post(`${BASE_URL}add-expense`, expense, getHeaders())\r\n            getExpenses() // Refresh expenses after adding\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error adding expense')\r\n        }\r\n    }\r\n\r\n    // Function to fetch all expenses\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`, getHeaders())\r\n            setExpenses(response.data)\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error fetching expenses')\r\n            setExpenses([])\r\n        }\r\n    }\r\n\r\n    // Function to delete an expense\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-expense/${id}`, getHeaders())\r\n            getExpenses() // Refresh expenses after deleting\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Error deleting expense')\r\n        }\r\n    }\r\n\r\n    // Function to calculate total expenses\r\n    const totalExpenses = () => {\r\n        return expenses.reduce((acc, expense) => acc + expense.amount, 0)\r\n    }\r\n\r\n    // Function to calculate total balance (income - expenses)\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    // Function to get transaction history (latest 3 transactions)\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\n// Custom hook to use global context\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}